import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def artOnly = false // enable a fast build supported ONLY by Android 5.0+
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

def dateFormatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS")
dateFormatter.setTimeZone(TimeZone.getTimeZone("UTC"))
def buildTime = dateFormatter.format(new Date())

// Manifest version information
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 1
def versionMajorMinorPatchBuild = "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"


android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'
    defaultConfig {
        applicationId "com.vikingsen.cheesedemo"
        minSdkVersion 19
        targetSdkVersion 27

        if (artOnly) {
            minSdkVersion 21 // temp enable to perform faster builds
        }

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName versionMajorMinorPatchBuild

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        buildConfigField "String", "USER_AGENT_APP_NAME", "\"CheeseDemo-Android\""
        buildConfigField "String", "SERVICE_BASE_URL", "\"http://10.0.2.2:8080/\""
        buildConfigField "String", "IMAGE_BASE_URL", "\"http://10.0.2.2:8080\""
        buildConfigField "String", "USER_NAME", "\"Monterey Jack\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    lintOptions {
        abortOnError true
        disable 'InvalidPackage'
        warning 'MissingTranslation'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/MANIFEST.MF'
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-DEV'
            buildConfigField "String", "BUILD_TIME", "\"DEBUG\""
            buildConfigField "String", "GIT_SHA", "\"DEBUG\""
        }
        release {
            buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
            buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:support-v13:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:support-annotations:${supportLibVersion}"
    implementation "com.android.support:animated-vector-drawable:${supportLibVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:multidex:1.0.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.19.3"

    implementation "android.arch.lifecycle:runtime:1.0.3"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$lifecycleVersion"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"

    // Custom SQLite database
    implementation 'org.sqlite.sqliteX:sqlite-android:3.15.2'
    implementation "org.dbtools:dbtools-room:$dbtoolsRoomVersion"
    implementation "org.dbtools:dbtools-room-sqliteorg:$dbtoolsRoomVersion"

    implementation 'me.eugeniomarletti:android-extras-delegates:1.0.5'

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // UI
    implementation "com.vikingsen:pocketknife-core:${pocketKnifeVersion}"
    kapt "com.vikingsen:pocketknife-compiler:${pocketKnifeVersion}"
    implementation "com.afollestad.material-dialogs:commons:$materialDialogs"

    // Code
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    implementation 'com.devbrackets.android:recyclerext:2.1.1'
    implementation "com.jakewharton.timber:timber:4.6.0"
    implementation 'com.evernote:android-job:1.2.0'

    // Network
    implementation 'com.squareup.retrofit2:converter-jackson:2.3.0'
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glideVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.dbtools:dbtools-room-jdbc:1.1.0"
}